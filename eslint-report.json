[{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/A11yIssues.js","messages":[{"ruleId":"jsx-a11y/alt-text","severity":2,"message":"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","line":9,"column":7,"nodeType":"JSXOpeningElement","endLine":9,"endColumn":29},{"ruleId":"jsx-a11y/anchor-is-valid","severity":2,"message":"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","line":18,"column":7,"nodeType":"JSXOpeningElement","endLine":18,"endColumn":49},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":18,"column":7,"nodeType":"JSXOpeningElement","endLine":18,"endColumn":49},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":18,"column":7,"nodeType":"JSXOpeningElement","endLine":18,"endColumn":49},{"ruleId":"jsx-a11y/no-redundant-roles","severity":2,"message":"The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","line":43,"column":7,"nodeType":"JSXOpeningElement","endLine":43,"endColumn":29},{"ruleId":"jsx-a11y/no-noninteractive-tabindex","severity":2,"message":"`tabIndex` should only be declared on interactive elements.","line":46,"column":12,"nodeType":"JSXAttribute","endLine":46,"endColumn":24},{"ruleId":"jsx-a11y/tabindex-no-positive","severity":2,"message":"Avoid positive integer values for tabIndex.","line":46,"column":12,"nodeType":"JSXAttribute","endLine":46,"endColumn":24},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":49,"column":7,"nodeType":"JSXOpeningElement","endLine":49,"endColumn":55},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":49,"column":7,"nodeType":"JSXOpeningElement","endLine":49,"endColumn":55}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nfunction A11yIssues() {\n  return (\n    <div>\n      <h1>Accessibility Issues Examples</h1>\n\n      {/* Issue 1: Missing alt text for image */}\n      <img src=\"logo.svg\" />\n\n      {/* Issue 2: Button without type attribute */}\n      <button>Click Me</button>\n\n      {/* Issue 3: Input without label */}\n      <input type=\"text\" placeholder=\"Enter your name\" />\n\n      {/* Issue 4: Anchor tag used as button */}\n      <a onClick={() => alert('Link clicked!')}>This is a link acting as a button</a>\n\n      {/* Issue 5: Missing scope attribute on table header */}\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Age</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>John Doe</td>\n            <td>30</td>\n          </tr>\n        </tbody>\n      </table>\n\n      {/* Issue 6: Using non-semantic elements for headings */}\n      <p style={{ fontSize: '2em', fontWeight: 'bold' }}>This looks like a heading</p>\n\n      {/* Issue 7: Missing lang attribute on html element (will be caught by a different rule, but good to include) */}\n      {/* This issue is typically caught at the document level, not within a component. */}\n\n      {/* Issue 8: Redundant role on a semantic element */}\n      <button role=\"button\">Another Button</button>\n\n      {/* Issue 9: Positive tabindex on an interactive element */}\n      <div tabIndex=\"1\">Focusable Div</div>\n\n      {/* Issue 10: No onBlur for interactive element with onClick */}\n      <div onClick={() => console.log('Div clicked')}>Clickable Div</div>\n\n    </div>\n  );\n}\n\nexport default A11yIssues;\n","usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/App.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/App.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/reportWebVitals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]},{"filePath":"/Users/madhu/Documents/Software Development/Projects/access-insights-dashboard/a11y-dummy-project/src/setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]}]}]